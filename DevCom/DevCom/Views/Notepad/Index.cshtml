@using DevCom.Models
@model DevCom.Models.ViewModels.NotepadVM


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int noteIndex = -1;
    if (Session["NoteIndex"] != null)
    {
        noteIndex = Convert.ToInt32(Session["NoteIndex"].ToString());
    }
    else
    {
        Session["NoteIndex"] = "-1";
    }

    DevCom_DBEntities db = new DevCom_DBEntities();
    Notepad _notepad = new Notepad();

    var text_id_list = new List<string>();
    if (noteIndex >= 0)
    {

        _notepad = Model.Notepads.ElementAt(noteIndex);
        TempData["noteid"] = _notepad.Notepad_Id;

        foreach (var items in Model.Content_ids)
        {
            foreach (var item in items)
            {
                if (item.Contains(Model.textsubstr))
                {
                    var _text = db.Texts.Where(x => x.Text_Id.Equals(item)).First();
                    if (!text_id_list.Contains(_text.Text_Id))
                    {
                        text_id_list.Add(_text.Text_Id);
                    }
                }
            }
        }
        text_id_list.Sort();
    }
}
<style>
    .scrollhide::-webkit-scrollbar {
        display: none;
    }

    #options {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        margin: 0px 5px;
    }

        #options button {
            height: 28px;
            width: 28px;
            align-items: center;
            margin-right: 8px;
            border-radius: 3px;
            border: none;
            outline: none;
            background-color: aliceblue;
            color: black;
        }

        #options label,
        #options select {
            font-family: "Poppins", sans-serif;
            width: auto;
            margin: 4px;
        }

    .input-wrapper {
        display: flex;
        align-items: center;
    }

    input[type="color"] {
        -webkit-appearance: none;
        -moz-appearance: none;
        background-color: transparent;
        width: 40px;
        height: 28px;
        border: none;
        cursor: pointer;
        margin: 4px;
    }

        input[type="color"]::-webkit-color-swatch {
            border-radius: 15px;
            box-shadow: 0 0 0 2px #ffffff, 0 0 0 3px #020929;
        }


    .custom-active {
        background-color: #e0e9ff;
    }
</style>
<div class="container-fluid" style="max-height: 78vh;">
    <div class="row h-100">
        <div class="col-md-3 " style="max-height: 90%">
            <button type="button" class="btn btn-primary w-100 mb-3"
                    data-bs-toggle="modal" data-bs-target="#exampleModal">
                + Create
            </button>
            <div class="overflow-auto h-100 scrollhide">
                <div class="list-group">
                    @foreach (var item in Model.Notepads)
                    {
                        <button class="btn list-group-item list-group-item-action notes text-truncate" aria-expanded="false" aria-controls="demo1">
                            @item.Title
                        </button>
                    }
                </div>
            </div>
        </div>
        @if (noteIndex < 0)
        {
            <div class="col position-relative">
                <div class="position-absolute top-50 start-50 translate-middle text-center w-100">
                    <h1 class="display-4">
                        Learn how to use Notepad
                    </h1>
                    <a class="display-3 my-5" href="#">
                        Get Started
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="col border-start border-4 border-dark" style="min-height: 600px; max-height: 600px;">
                <div class="row mb-4">
                    <div class="container-fluid">
                        <div class="row justify-content-between mb-3">
                            <div class="col">
                                <button class="btn">
                                    <i class="fa-sharp fa-solid fa-maximize"></i>
                                </button>
                            </div>
                            <div class="col text-end">
                                <button class="btn">
                                    <i class="fa fa-history" aria-hidden="true"></i>
                                </button>
                                <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#deleteNotepadModal">
                                    <i class="fa-sharp fa-solid fa-trash"></i>
                                </button>
                            </div>
                        </div>
                        <div class="row overflow-auto scrollhide" style="min-height: 400px; max-height:400px;">

                            <h1 class="display-5 fw-bold">@_notepad.Title</h1>
                            <h4>Creation Date: @_notepad.Creation_Date</h4>
                            <h4>Update Date: @_notepad.Update_Date</h4>

                            <div class="d-flex align-items-center">
                                <span class="fw-bold">Tag: </span>
                                <button type="button" class="btn" data-bs-toggle="modal"
                                        data-bs-target="#tagModal">
                                    @if (Model.Tags.Count() > noteIndex && Model.Tags.ElementAt(noteIndex) != "")
                                    {
                                        @Model.Tags.ElementAt(noteIndex)
                                    }
                                    else
                                    {
                                        <span>add</span>
                                    }
                                </button>
                            </div>

                            <div class="container">
                                @foreach (var item in Model.Content_ids.ElementAt(noteIndex))
                                {
                                    if (item != null)
                                    {
                                        if (item.Contains(Model.textsubstr))
                                        {
                                            var _text = db.Texts.Where(x => x.Text_Id.Equals(item)).FirstOrDefault();
                                            <div class="row justify-content-between">
                                                <!-- Be cautios changing inside here... element traversal done-->
                                                <div class="col-9 border rounded p-4">
                                                    <p class="fw-bold opacity-50 lh-1"><small>Id: @_text.Text_Id</small></p>
                                                    <div class="text-input list-unstyled" id="@_text.Text_Id" contenteditable="false">
                                                        @Html.Raw(WebUtility.HtmlDecode(_text.Text1))
                                                    </div>
                                                </div>
                                                <div class="col-3 d-flex w-auto">
                                                    <button type="button" class="btn btn-sm" data-bs-toggle="modal"
                                                            data-bs-target="#contentTagModal" onclick="getContentId(this)"
                                                             style="height: 30px">
                                                        @if (_text.Tag != null)
                                                        {
                                                            @_text.Tag.Tag_Name
                                                        }
                                                        else
                                                        {
                                                            <span>add tag</span>
                                                        }
                                                    </button>
                                                    <!-- Shifting to be continued -->
                                                    <button type="button" class="btn" style="height: 30px"> 
                                                        <i class='bx bxs-upvote'></i>
                                                    </button>
                                                    <button type="button" class="btn" style="height: 30px">
                                                        <i class='bx bxs-downvote'></i>
                                                    </button>

                                                    <button class="btn note-edit-btn" onclick="edit_and_save(this)"
                                                             style="height: 30px">
                                                        <i class="fas fa-solid fa-edit changable-icon"></i>
                                                    </button>
                                                    <button type="button" class="btn " data-bs-toggle="modal"
                                                            data-bs-target="#deleteModal" onclick="getContentId(this)"
                                                             style="height: 30px">
                                                        <i class="fa-sharp fa-solid fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        }
                                        else if (item.Contains(Model.imagesubstr))
                                        {

                                        }
                                        else if (item.Contains(Model.audiosubstr))
                                        {

                                        }
                                        else if (item.Contains(Model.videosubstr))
                                        {

                                        }
                                        else if (item.Contains(Model.filesubstr))
                                        {

                                        }
                                        else if (item.Contains(Model.canvassubstr))
                                        {

                                        }
                                    }
                                }
                            </div>
                            <div class="d-flex justify-content-around my-3">
                                <button type="button" class="btn border-primary" data-bs-toggle="modal" data-bs-target="#addTextModal">
                                    + Add Text
                                </button>
                                <button class="btn border-primary" onclick="add-image()">
                                    Add Image
                                </button>
                                <button class="btn border-primary" onclick="add-audio()">
                                    Add Audio
                                </button>
                                <button class="btn border-primary" onclick="add-video()">
                                    Add Video
                                </button>
                                <button class="btn border-primary" onclick="add-canvas()">
                                    Add Canvas
                                </button>
                                <button class="btn border-primary" onclick="add-file()">
                                    Add a PDF File
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="border-top border-3 pt-4 border-dark" id="options">
                        <!-- Text Format -->
                        <button id="bold" class="option-button format">
                            <i class="fa-solid fa-bold"></i>
                        </button>
                        <button id="italic" class="option-button format">
                            <i class="fa-solid fa-italic"></i>
                        </button>
                        <button id="underline" class="option-button format">
                            <i class="fa-solid fa-underline"></i>
                        </button>
                        <button id="strikethrough" class="option-button format">
                            <i class="fa-solid fa-strikethrough"></i>
                        </button>
                        <button id="superscript" class="option-button script">
                            <i class="fa-solid fa-superscript"></i>
                        </button>
                        <button id="subscript" class="option-button script">
                            <i class="fa-solid fa-subscript"></i>
                        </button>
                        <!-- List -->
                        <button id="insertOrderedList" class="option-button">
                            <div class="fa-solid fa-list-ol"></div>
                        </button>
                        <button id="insertUnorderedList" class="option-button">
                            <i class="fa-solid fa-list"></i>
                        </button>
                        <!-- Undo/Redo -->
                        <button id="undo" class="option-button">
                            <i class="fa-solid fa-rotate-left"></i>
                        </button>
                        <button id="redo" class="option-button">
                            <i class="fa-solid fa-rotate-right"></i>
                        </button>
                        <!-- Link -->
                        <button id="createLink" class="adv-option-button">
                            <i class="fa fa-link"></i>
                        </button>
                        <button id="unlink" class="option-button">
                            <i class="fa fa-unlink"></i>
                        </button>
                        <!-- Alignment -->
                        <button id="justifyLeft" class="option-button align">
                            <i class="fa-solid fa-align-left"></i>
                        </button>
                        <button id="justifyCenter" class="option-button align">
                            <i class="fa-solid fa-align-center"></i>
                        </button>
                        <button id="justifyRight" class="option-button align">
                            <i class="fa-solid fa-align-right"></i>
                        </button>
                        <button id="justifyFull" class="option-button align">
                            <i class="fa-solid fa-align-justify"></i>
                        </button>
                        <button id="indent" class="option-button spacing">
                            <i class="fa-solid fa-indent"></i>
                        </button>
                        <button id="outdent" class="option-button spacing">
                            <i class="fa-solid fa-outdent"></i>
                        </button>
                        <!-- Headings -->
                        <select id="formatBlock" class="adv-option-button form-select form-select-sm">
                            <option value="H1">H1</option>
                            <option value="H2">H2</option>
                            <option value="H3">H3</option>
                            <option value="H4">H4</option>
                            <option value="H5">H5</option>
                            <option value="H6">H6</option>
                        </select>
                        <!-- Font -->
                        <select id="fontName" class="adv-option-button form-select form-select-sm"></select>
                        <select id="fontSize" class="adv-option-button form-select form-select-sm"></select>
                        <!-- Color -->
                        <div class="input-wrapper">
                            <input type="color" id="foreColor" class="adv-option-button" />
                            <label for="foreColor">Font Color</label>
                        </div>
                        <div class="input-wrapper">
                            <input type="color" id="backColor" class="adv-option-button" />
                            <label for="backColor">Highlight Color</label>
                        </div>
                    </div>
                </div>

            </div>
        }

    </div>
</div>


<div class="modal fade" id="addTextModal" data-bs-backdrop="false" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addTextModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addTextModalLabel">Add Text</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span>Select Existing: </span>
                @if (noteIndex >= 0)
                {
                    <select class="form-select" id="text-id-list" name="Texts" onchange="change_text_selection(this)">
                        <option>New</option>
                        @foreach (var item in text_id_list)
                        {
                            if (!Model.Content_ids.ElementAt(noteIndex).Contains(item))
                            {
                                <option>@item</option>
                            }
                        }
                    </select>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="add_new_text()">Add</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" data-bs-backdrop="false" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Enter Note Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <form id="createForm" method="post">
                        <div class="mb-3">
                            <input type="text" class="form-control" id="notetitle" placeholder="Enter title" />
                        </div>
                    </form>

                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="btnCreate" class="btn btn-primary" data-bs-dismiss="modal">Add</button>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" data-bs-backdrop="false" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="deleteModalLabel">Delete Confirmation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure to delete this content?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="deleteContent()">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteNotepadModal" data-bs-backdrop="false" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteNotepadModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="deleteNotepadModalLabel">Delete Confirmation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure to delete this entire note?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="delete_notepad()">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="tagModal" data-bs-backdrop="false" data-bs-keyboard="false" tabindex="-1" aria-labelledby="tagModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="tagModalLabel">Manage Tag</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex align-items-center">
                    <span class="me-3">Select: </span>
                    @if (noteIndex >= 0)
                    {
                        <select class="form-select w-auto" id="tag-name-list" name="Tags" onchange="change_tag_selection(this)">
                            <option>New</option>
                            <option>Remove</option>

                            @foreach (var item in Model.AllTags)
                            {
                                <option>@item</option>
                            }
                        </select>
                    }
                </div>
                <input type="text" class="form-control my-3" id="tag-name-input" placeholder="Enter tag (everything but letters will be cleared)" />
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="tag-checkbox">
                    <label class="form-check-label" for="tag-checkbox">
                        Set this for all contents
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="manage_tags()">Confirm</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="contentTagModal" data-bs-backdrop="false" data-bs-keyboard="false" tabindex="-1" aria-labelledby="contentTagModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="contentTagModalLabel">Manage Tag</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex align-items-center">
                    <span class="me-3">Select: </span>
                    @if (noteIndex >= 0)
                    {
                        <select class="form-select w-auto" id="tag-name-list" name="Tags" onchange="change_tag_selection(this)">
                            <option>New</option>
                            <option>Remove</option>
                            <option>Parent</option>

                            @foreach (var item in Model.AllTags)
                            {
                                <option>@item</option>
                            }
                        </select>
                    }
                </div>
                <input type="text" class="form-control my-3" id="tag-name-input2" placeholder="Enter tag (everything but letters will be cleared)" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="manage_content_tags()">Confirm</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">

        var items = document.querySelectorAll(".notes"), tab = [];

        for (var i = 0; i < items.length; i++) {
            tab.push(items[i].innerHTML);
        }

        var buttons = document.querySelectorAll(".notes");
        let icon = document.querySelectorAll(".changable-icon");

        var noteIndex = @noteIndex;
        window.noteIndex = @noteIndex;

        for (var i = 0; i < buttons.length; i++) {
            (i != noteIndex) ? buttons[i].classList.remove('active') : buttons[i].classList.add('active');
        }

        $(document).ready(function () {
            $("#options").hide();
            $("#btnCreate").click(function () {
                var title = $("#notetitle").val();

                var obj = {
                    Title: title
                }
                //var form = $("#createForm").serialize();

                $.ajax({
                    type: "POST",
                    data: obj, //form
                    url: "/Notepad/Create",
                    success: function () {
                        window.location.href = "/Notepad/Index"
                        //location.reload();
                    },
                    failure: function () {
                        alert("failed");
                    },
                    error: function () {
                        alert("error");
                    }
                })

            })
            $(".notes").click(function (event) {
                var index = tab.indexOf(this.innerHTML);

                console.log(index);
                var obj = {
                    Notepad_Id: index
                }

                $.ajax({
                    type: "POST",
                    data: obj, //form
                    url: "/Notepad/Details",
                    success: function () {
                        window.location.href="/Notepad/Index";
                    },
                    failure: function () {
                        alert("failed");
                    },
                    error: function () {
                        alert("error");
                    }
                })

            })
        })

        function edit_and_save(e){
            //console.log("Clicked")
            //document.querySelectorAll("")
            //console.log(e)
            let area = e.parentElement.previousElementSibling.children[1];

            //console.log(area);
            //console.log(area.id);
            if (area.isContentEditable) {
                area.setAttribute("contenteditable", false);
                e.children[0].classList.remove("fa-check");
                e.children[0].classList.add("fa-edit");
                $("#options").hide();
                saveChanges(area);
            }
            else {
                area.setAttribute("contenteditable", true);
                e.children[0].classList.remove("fa-edit");
                e.children[0].classList.add("fa-check");
                $("#options").show();
            }
        }

        function saveChanges(area) {
            var note = area.innerHTML;

            note = note.replace(/&nbsp;/g, ' ');
            note = note.replace(/&amp;/g, '&');
            note = note.replace(/&lt;/g, '<');
            note = note.replace(/&gt;/g, '>');

            var id = area.id;

            var obj = {
                Text_Id: id,
                Text1: note
            }

            $.ajax({
                type: "POST",
                dataType: "text/plain; charset=utf-8",
                data: obj,
                url: "/Notepad/Update",
                success: function () {
                    window.location.href = "/Notepad/Index";
                },
                failure: function () {
                    alert("failed");
                },
                error: function () {
                    window.location.href = "/Notepad/Index";
                }
            })
        }

        var content_id = "";

        function getContentId(e) {
            content_id = e.parentElement.previousElementSibling.children[1].id;
        }

        function deleteContent() {
            $.ajax({
                type: "POST",
                data: { data: content_id },
                url: "/Notepad/Delete",
                success: function () {
                    window.location.href = "/Notepad/Index";
                },
                failure: function () {
                    alert("failed");
                },
                error: function () {
                    window.location.href = "/Notepad/Index";
                }
            })
        }

        function delete_notepad() {
            $.ajax({
                type: "POST",
                url: "/Notepad/DeleteNotepad",
                success: function () {
                    window.location.href = "/Notepad/Index";
                },
                failure: function () {
                    alert("failed");
                },
                error: function () {
                    window.location.href = "/Notepad/Index";
                }
            })
        }

        var text_id_selected = "New";

        function change_text_selection(val) {
            console.log(val.value);
            text_id_selected = val.value;
        }

        function add_new_text() {

            var obj = { text_id: text_id_selected };

            $.ajax({
                type: "POST",
                data: obj,
                url: "/Notepad/AddText",
                success: function () {
                    window.location.href = "/Notepad/Index";
                },
                failure: function () {
                    alert("failed");
                },
                error: function () {
                    alert("error");
                }
            })
        }

        var tag_name_selected = "New";

        function change_tag_selection(val) {
            tag_name_selected = val.value;
            if (tag_name_selected == "New") {
                $("#tag-name-input").prop('disabled', false);
                $("#tag-name-input2").prop('disabled', false);
            }
            else {
                $("#tag-name-input").prop('disabled', true);
                $("#tag-name-input2").prop('disabled', true);
            }
        }

        function manage_tags() {
            if (tag_name_selected == "New") {
                var temp = $('#tag-name-input').val();
                if (temp == "" || temp == "New") {
                    alert("Invalid tag");
                    return;
                }
                tag_name_selected = temp;
            }

            tag_name_selected = tag_name_selected.toLowerCase();
            tag_name_selected = tag_name_selected.replace(/[^a-z]/g, '')

            var checked = $('#tag-checkbox').prop("checked");
            console.log(checked);
            console.log(tag_name_selected);

            var obj = {
                TagName: tag_name_selected,
                ApplyContents: checked
            }

            tag_name_selected = "New";
           

            $.ajax({
                type: "POST",
                data: obj,
                url: "/Notepad/ManageTag",
                success: function () {
                    window.location.href = "/Notepad/Index";
                },
                failure: function () {
                    alert("failed");
                },
                error: function () {
                    alert("error");
                }
            })
        }

        function manage_content_tags() {
            if (tag_name_selected == "New") {
                var temp = $('#tag-name-input2').val();
                if (temp == "" || temp == "New") {
                    alert("Invalid tag");
                    return;
                }
                tag_name_selected = temp;
            }

            tag_name_selected = tag_name_selected.toLowerCase();
            tag_name_selected = tag_name_selected.replace(/[^a-z]/g, '')

            var obj = {
                TagName: tag_name_selected,
                Content_Id: content_id
            }

            tag_name_selected = "New";


            $.ajax({
                type: "POST",
                data: obj,
                url: "/Notepad/ManageContentTag",
                success: function () {
                    window.location.href = "/Notepad/Index";
                },
                failure: function () {
                    alert("failed");
                },
                error: function () {
                    alert("error");
                }
            })
        }

    </script>

}
@Scripts.Render("~/Scripts/NotepadEdit.js")